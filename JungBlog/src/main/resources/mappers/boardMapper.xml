<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd" >
<mapper namespace="kr.ezen.jung.dao.JungBoardDAO">
	<!-- 페이징을 위한 List 뿌리기 -->
	<select id="selectList" parameterType="hashmap" resultType="JungBoardVO">
		select
			R.*
		from
			(
				select
					rownum rnum, Q.*
				from
					(
						select
							jung_board.*
							, (
								SELECT
									COUNT(*)
								FROM
									heart_tb 
								WHERE
									heart_tb.boardRef = jung_board.idx
							) AS countHeart
						from
							jung_board
						<where>						
							<if test="deleted == null">
								deleted = 0
							</if>
							<if test="userRef != null">
                				and ref = #{userRef}
            				</if>	
							<if test="search != null">
								and (
									title like '%' || #{search} || '%'
									or content like '%' || #{search} || '%'
								)
							</if>
							<if test="categoryNum != null ">
								and categoryNum = #{categoryNum}
							</if>
							<if test="categoryNum == null ">
								and (
									categoryNum = 1 OR categoryNum = 2 OR categoryNum = 4 OR categoryNum = 6
								)
							</if>
						</where>
						order by
							<choose>
								<when test="orderCode == 'countHeart'">
									countHeart DESC, jung_board.idx DESC
								</when>
								<when test="orderCode == 'readCount'">
									jung_board.readCount DESC, jung_board.idx DESC
								</when>
								<otherwise>
									jung_board.idx DESC
								</otherwise>
							</choose>
					) Q
				where
					<![CDATA[
						rownum <= #{endNo}
					]]> 
			) R
		where
			<![CDATA[
				rnum >= #{startNo}
			]]>
	</select>
	
	
	<select id="selectByIdx" parameterType="int" resultType="JungBoardVO">
		select * from jung_board where idx = #{idx}
	</select>
	
	<select id="selectCount" parameterType="hashmap" resultType="int">
		select
			count(*)
		from
			jung_board
		<where>						
			<if test="deleted == null">
				deleted = 0
			</if>
			<if test="userRef != null">
        		and ref = #{userRef}
    		</if>	
			<if test="search != null">
				and (
					title like '%' || #{search} || '%'
					or content like '%' || #{search} || '%'
				)
			</if>
			<if test="categoryNum != null ">
				and categoryNum = #{categoryNum}
			</if>
			<if test="categoryNum == null ">
				<![CDATA[
					and categoryNum <> 3 AND  categoryNum <> 5
				]]>
			</if>
		</where>
	</select>
	
	<insert id="insert" parameterType="JungBoardVO">
      <selectKey resultType="int" keyProperty="idx" order="BEFORE" keyColumn="idx">
           SELECT jung_board_idx_seq.nextval FROM dual      
       </selectKey> 
      insert into jung_board values(#{idx, jdbcType=INTEGER},#{ref},#{categoryNum},#{title},#{content},0,sysdate,0)
   </insert>
	
	<update id="update" parameterType="JungBoardVO">
		update jung_board set title=#{title}, content = #{content}, regdate = sysdate where idx = #{idx}
	</update>
	
	<update id="updateReadCount" parameterType="int">
		update jung_board set readCount = readCount + 1 where idx = #{idx}
	</update>
	
	<update id="hide" parameterType="int">
		update jung_board set deleted = 1 where idx = #{idx}
	</update>
	
	<update id="show" parameterType="int">
		update jung_board set deleted = 0 where idx = #{idx}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from jung_board where idx = #{idx}
	</delete>
	
	<!-- userRef로 삭제 -->
	<delete id="deleteByUserRef" parameterType="int">
		delete from jung_board where ref = #{ref}
	</delete>
	
	<!-- 관리자용 및 마이페이지용-->
	<select id="selectCountByUserIdx" parameterType="int" resultType="int">
		select count(*) from jung_board where ref = #{userIdx}
	</select>
	
	<select id="selectByUserIdx" parameterType="int" resultType="JungBoardVO">
		select * from jung_board where ref = #{idx} order by idx desc
	</select>
</mapper>