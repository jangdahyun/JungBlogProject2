<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd" >
<mapper namespace="kr.ezen.jung.dao.JungFileBoardDAO">
	<!-- 페이징을 위한 List 뿌리기 -->
	<select id="selectList" parameterType="hashmap" resultType="JungFileBoardVO">
		select
			R.*
		from
			(
				select
					rownum rnum, Q.*
				from
					(
						select
							*
						from
							jung_board
						order by
							idx desc
					) Q
				where
					<![CDATA[
						rownum <= #{endNo}
					]]> 
			) R
		where
			<![CDATA[
				rnum >= #{startNo}
			]]>
	</select>
	
	<select id="selectfileByIdx" parameterType="int" resultType="JungFileBoardVO">
		select * from jung_file_board where idx=#{idx}
	</select>
	
	<!-- 유저가 쓴 글 보여주기 -->
	<select id="selectfileByRef" parameterType="int" resultType="JungFileBoardVO">
		select * from jung_file_board where ref = #{idx} order by idx 
	</select>
	
	<select id="selectCount" parameterType="hashmap" resultType="int">
		select count(*) from jung_file_board
	</select>
	
	<insert id="insert" parameterType="JungFileBoardVO">
	    insert into jung_file_board values(jung_board_idx_seq.nextval, #{ref}, #{filepath}, #{url})
	</insert>

	<update id="update" parameterType="JungFileBoardVO">
		update jung_file_board set title=#{title}, content = #{content}, regdate = sysdate, filepath = #{filepath}, url = #{url} where idx = #{idx}
	</update>
	
	<update id="updateReadCount" parameterType="int">
		update jung_file_board set readCount = readCount + 1 where idx = #{idx}
	</update>
	
	<update id="deleteFake" parameterType="int">
		update jung_file_board set deleted = 1 where idx = #{idx}
	</update>
	
	<delete id="deleteReal" parameterType="int">
		delete from jung_file_board where idx = #{idx}
	</delete>
	
	
	
	 
	 
	
	
	
</mapper>