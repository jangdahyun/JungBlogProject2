<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "./mybatis-3-mapper.dtd" >
<mapper namespace="kr.ezen.jung.dao.JungCommentDAO">
	
	<!-- board의 idx에 해당하는 댓글 주기 -->
	<select id="selectByRef" parameterType="int" resultType="JungCommentVO">
		select * from jung_comment where boardRef = #{boardRef} order by idx desc
	</select>
	<!-- board의 idx에 해당하는 댓글갯수 -->
	<select id="selectCountByRef" parameterType="int" resultType="int">
		select count(*) from jung_comment where boardRef = #{boardRef}
	</select>
	
	<!-- User의 idx에 해당하는 댓글 주기 -->
	<select id="selectByUserRef" parameterType="int" resultType="JungCommentVO">
		select * from jung_comment where userRef = #{userRef} order by idx desc
	</select>
	
	<!-- 댓글 저장 -->
	<insert id="insert" parameterType="JungCommentVO">
		insert into jung_comment values (jung_comment_idx_seq.nextval, #{boardRef}, #{userRef}, #{reply}, sysdate)
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="update" parameterType="JungCommentVO">
		update jung_comment set reply = #{reply}, regDate = sysdate where idx = #{idx}
	</update>
	
	<!-- 댓글 1개 삭제 -->
	<delete id="delete" parameterType="int">
		delete from jung_comment where idx = #{idx}
	</delete>
	
	<!-- 게시글 1개에 대한 댓글 지우기 -->
	<delete id="deleteByBoardRef" parameterType="int">
		delete from jung_comment where  boardRef = #{boardRef}		
	</delete>
	
	<!-- 회원 정보에 따른 댓글 지우기 -->
	<delete id="deleteByUserRef" parameterType="int">
		delete from jung_comment where  userRef = #{userRef}				
	</delete>
</mapper>